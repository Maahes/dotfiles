# Originally by Padraig Brady www.pixelbeat.org Formatted with additions by
# maahes
#(asterisk/bullet = can be run pretty much as is, i.e., copy&paste)
Command                                                                                             Description
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
•   grep . /proc/sys/net/ipv4/*                                                                    List the contents of flag files
•   set | grep $USER                                                                               Search current environment
•   tr '\0' '\n' < /proc/$$/environ                                                                Display the startup environment for any process
•   echo $PATH | tr : '\n'                                                                         Display the $PATH one per line
•   kill -0 $$ && echo process exists and can accept signals                                       Check for the existence of a process (pid)
•   find /etc -readable | xargs less -K -p'*ntp' -j $((${LINES:-25}/2))                            Search paths and data with full context. Use n to iterate

Low impact admin
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#   apt-get install "package" -o Acquire::http::Dl-Limit=42 \ -o Acquire::Queue-mode=access        Rate limit apt-get to 42KB/s
    echo 'wget url' | at 01:00                                                                     Download url at 1AM to current dir
#   apache2ctl configtest && apache2ctl graceful                                                   Restart apache if config is OK
•   nice openssl speed sha1                                                                        Run a low priority command (openssl benchmark)
•   chrt -i 0 openssl speed sha1                                                                   Run a low priority command (more effective than nice)
•   renice 19 -p $$; ionice -c3 -p $$                                                              Make shell (script) low priority. Use for non interactive tasks

Interactive monitoring
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
•   watch -t -n1 uptime                                                                            Clock with system load
•   htop -d 5                                                                                      Better top (scrollable, tree view, lsof/strace integration, ...)
•   iotop                                                                                          What's doing I/O
#   watch -d -n30 "nice ps_mem.py | tail -n $((${LINES:-12}-2))"                                   What's using RAM
#   iftop                                                                                          What's using the network. See also iptraf
#   mtr www.pixelbeat.org                                                                          Ping and traceroute combined

Useful utilities
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
•   pv < /dev/zero > /dev/null                                                                     Progress Viewer for data copying from files and pipes
•   wkhtml2pdf http://.../linux_commands.html linux_commands.pdf                                   Make a pdf of a web page
•   timeout 1 sleep 3                                                                              run a command with bounded time. See also timeout

Networking
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
•   python -m SimpleHTTPServer                                                                     Serve current directory tree at http://$HOSTNAME:8000/
•   openssl s_client -connect www.google.com:443 </dev/null 2>&0 | openssl x509 -dates -noout      Display the date range for a site's certs
•   curl -I www.pixelbeat.org                                                                      Display the server headers for a web site
#   lsof -i tcp:80                                                                                 What's using port 80
#   httpd -S                                                                                       Display a list of apache virtual hosts
•   vim scp://user@remote//path/to/file                                                            Edit remote file using local vim. Good for high latency links
•   curl -s http://www.pixelbeat.org/pixelbeat.asc | gpg --import                                  Import a gpg key from the web
•   tc qdisc add dev lo root handle 1:0 netem delay 20msec                                         Add 20ms latency to loopback device (for testing)
•   tc qdisc del dev lo root                                                                       Remove latency added above
    ethtool eth0                                                                                   Show status of ethernet interface eth0
    ethtool --change eth0 autoneg off speed 100 duplex full                                        Manually set ethernet interface speed
    iwconfig eth1                                                                                  Show status of wireless interface eth1
    iwconfig eth1 rate 1Mb/s fixed                                                                 Manually set wireless interface speed
•   iwlist scan                                                                                    List wireless networks in range
•   ip link show                                                                                   List network interfaces
    ip link set dev eth0 name wan                                                                  Rename interface eth0 to wan
    ip link set dev eth0 up                                                                        Bring interface eth0 up (or down)
•   ip addr show                                                                                   List addresses for interfaces
    ip addr add 1.2.3.4/24 brd + dev eth0                                                          Add (or del) ip and mask (255.255.255.0)
•   ip route show                                                                                  List routing table
    ip route add default via 1.2.3.254                                                             Set default gateway to 1.2.3.254
•   host pixelbeat.org                                                                             Lookup DNS ip address for name or vice versa
•   hostname -i                                                                                    Lookup local ip address (equivalent to host `hostname`)
•   whois pixelbeat.org                                                                            Lookup whois info for hostname or ip address
•   netstat -tupl                                                                                  List internet services on a system
•   netstat -tup                                                                                   List active connections to/from system

Windows networking (Note samba is the package that provides all this windows specific networking support)
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
•   smbtree                                                                                        Find windows machines. See also findsmb
    nmblookup -A 1.2.3.4                                                                           Find the windows (netbios) name associated with ip address
    smbclient -L windows_box                                                                       List shares on windows machine or samba server
    mount -t smbfs -o fmask=666,guest //windows_box/share /mnt/share                               Mount a windows share
    echo 'message' | smbclient -M windows_box                                                      Send popup to windows machine (off by default in XP sp2)

rsync (Network efficient file copier: Use the --dry-run option for testing)
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
    rsync -P rsync://rsync.server.com/path/to/file file                                            Only get diffs. Do multiple times for troublesome downloads
    rsync --bwlimit=1000 fromfile tofile                                                           Locally copy with rate limit. It's like nice for I/O
    rsync -az -e ssh --delete ~/public_html/ remote.com:'~/public_html'                            Mirror web site (using compression and encryption)
    rsync -auz -e ssh remote:/dir/ . && rsync -auz -e ssh . remote:/dir/                           Synchronize current directory with remote one

ssh (Secure SHell)
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
    ssh $USER@$HOST command                                                                        Run command on $HOST as $USER (default command=shell)
•   ssh -f -Y $USER@$HOSTNAME xeyes                                                                Run GUI command on $HOSTNAME as $USER
    scp -p -r $USER@$HOST: file dir/                                                               Copy with permissions to $USER's home directory on $HOST
    scp -c arcfour $USER@$LANHOST: bigfile                                                         Use faster crypto for local LAN. This might saturate GigE
    ssh -g -L 8080:localhost:80 root@$HOST                                                         Forward connections to $HOSTNAME:8080 out to $HOST:80
    ssh -R 1434:imap:143 root@$HOST                                                                Forward connections from $HOST:1434 in to imap:143
    ssh-copy-id $USER@$HOST                                                                        Install public key for $USER@$HOST for password-less log in

wget (multi purpose download tool)
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
•   (cd dir/ && wget -nd -pHEKk http://www.pixelbeat.org/cmdline.html)                             Store local browsable version of a page to the current dir
    wget -c http://www.example.com/large.file                                                      Continue downloading a partially downloaded file
    wget -r -nd -np -l1 -A '*.jpg' http://www.example.com/dir/                                     Download a set of files to the current directory
    wget ftp://remote/file[1-9].iso/                                                               FTP supports globbing directly
•   wget -q -O- http://www.pixelbeat.org/timeline.html | grep 'a href' | head                      Process output directly
    echo 'wget url' | at 01:00                                                                     Download url at 1AM to current dir
    wget --limit-rate=20k url                                                                      Do a low priority download (limit to 20KB/s in this case)
    wget -nv --spider --force-html -i bookmarks.html                                               Check links in a file
    wget --mirror http://www.example.com/                                                          Efficiently update a local copy of a site (handy from cron)

Notification
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
•   echo "DISPLAY=$DISPLAY xmessage cooker" | at "NOW +30min"                                      Popup reminder
•   notify-send "subject" "message"                                                                Display a gnome popup notification
    echo "mail -s 'go home' P@draigBrady.com < /dev/null" | at 17:30                               Email reminder
    uuencode file name | mail -s subject P@draigBrady.com                                          Send a file via email
    ansi2html.sh | mail -a "Content-Type: text/html" P@draigBrady.com                              Send/Generate HTML email

Better default settings (useful in your .bashrc)
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#   tail -s.1 -f /var/log/messages                                                                 Display file additions more responsively
•   seq 100 | tail -n $((${LINES:-12}-2))                                                          Display as many lines as possible without scrolling
#   tcpdump -s0                                                                                    Capture full network packets

Useful functions/aliases (useful in your .bashrc)
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
•   md () { mkdir -p "$1" && cd "$1"; }                                                            Change to a new directory
•   strerror() { python -c "import os; print os.strerror($1)"; }                                   Display the meaning of an errno
•   plot() { { echo 'plot "-"' "$@"; cat; } | gnuplot -persist; }                                  Plot stdin. (e.g: • seq 1000 | sed 's/.*/s(&)/' | bc -l | plot)
•   hili() { e="$1"; shift; grep --col=always -Eih "$e|$" "$@"; }                                  Highlight occurences of expr. (e.g: • env | hili $USER)
•   alias hd='od -Ax -tx1z -v'                                                                     Hexdump. (usage e.g.: • hd /proc/self/cmdline | less)
•   alias realpath='readlink -f'                                                                   Canonicalize path. (usage e.g.: • realpath ~/../$USER)
•   ord() { printf "0x%x\n" "'$1"; }                                                               Shell version of the ord() function
•   chr() { printf $(printf '\\%03o\\n' "$1"); }                                                   Shell version of the chr() function
•   alias ls='ls -ohF --group-directories-first --color=always'                                    Display all attributes by default
•   alias l.='ls -d .[^.]*'                                                                        List Hidden directories with all attributes
•   alias remc='remind -cc+4 -m /home/maahes/.reminders'                                           Display reminders
•   alias :q='exit'                                                                                Useful if you're a vim user
•   alias grep='grep --color=auto'                                                                 Grep with color
•   alias ping='ping -c 5'                                                                         Ping 5 times use \ping to ping indefinitely
•   alias lsd='ls -ld *(-/DN)'                                                                     List only directories with all attributes (including Hidden)
•   alias -s {mpg,mpeg,avi,ogm,wmv,m4v,mp4,mov}='totem'                                            { Assign default program to launch these files when called withough prefix
•   alias -s {mp3,ogg,wav,flac}='totem'                                                              [i.e. file.mpg, not <some program> file.mpg]
•   alias -s {html,php,com,net,org,gov,be}='firefox'                                                 Replace with the program of your choosing
•   alias -s {rb,lua,cpp,c,h,zshrc,vimrc,py,md,rst,txt}='vim'
•   alias -s pdf='mupdf'                                                                           }
•   alias md='mkdir -p'                                                                            Make parent directories as needed
•   alias rd='rmdir'                                                                               Shortcut for rmdir
•   alias cd..='cd ..'                                                                             { Very useful aliases that allow you to go back directories
•   alias .='cd ../'                                                                                   just by hitting the corresponding number of .'s
•   alias ..='cd ../../'
•   alias ...='cd ../../../'
•   alias ....='cd ../../../../'                                                                   }
•   alias rm='rm -i'                                                                               Safer rm
•   alias m=more                                                                                   Easier more
•   alias l="ls -AFhl -g"                                                                          Lists almost everything without ownership, grouped
•   alias setx='setenv DISPLAY :0.0'                                                               Sets X to display 0
•   alias dsrm='find . -name ".DS_Store" -exec rm \{} \;'                                          Useful for mac users, removes DS_Store files
    alias today='cat /usr/share/calendar/* | grep `date +"%m/%d"`'                                 Will print today from the historical Ascii calendar,
                                                                                                   some distributions (like arch) do not include this by default.
•   alias start_cpan='perl -MCPAN -e shell'                                                        Starts CPAN
    alias psql='/opt/local/bin/psql8'                                                              Starts postgres, note that the location is dependent on distro
    alias start_lighty="sudo /opt/local/sbin/lighttpd -f /opt/local/etc/lighttpd/lighttpd.conf"                                         Starts lighttpd
    alias restart_lighty="killall lighttpd; sudo /opt/local/sbin/lighttpd -f /opt/local/etc/lighttpd/lighttpd.conf"                     Restarts lighttpd
    alias start_svn="/opt/local/bin/svnserve -d -r /var/svn/cf"                                    Start SVN
•   alias ri='ri -Tf ansi' Prints ruby API docs to stdout
•   alias po='popd'                                                                                Shortcut for popd
•   alias pu='pushd'                                                                               Shortcut for pushd
•   alias tsl="tail -s.1 -f /var/log/syslog"                                                       Alias line for better default listed above
•   alias tnsc="seq 100 | tail -n $((${LINES:-12}-2))"                                             Alias line for better default listed above

•   alias df="df -hT"                                                                              Human readable df
•   alias em="emacs -nw"                                                                           Launch emacs in console
•   alias tmux="tmux -2"                                                                           Launch tmux with 256color support
•   alias calc="concalc"                                                                           Console calculator
•   alias pdf="mupdf"                                                                              Who cares what your pdf reader is called?
•   alias weechat="weechat-curses"                                                                 Shortcut for weechat
•   alias cao="TERM=screen ssh -C -i ~/.ssh/cao_key -l joshua crawl.akrasiac.org"                  Useful for playing crawl, note you'll need CAO's key
•   alias emc="emacsclient -c &"                                                                   Attach to the emacs daemon in graphical emacs
•   alias emt="emacsclient -t"                                                                     Attach in terminal
•   alias emd="emacs --daemon"                                                                     Start the emacs daemon
•   alias mv='nocorrect mv'                                                                        { remove annoying auto corrects
•   alias cp='nocorrect cp'
•   alias mkdir='nocorrect mkdir'                                                                  }
•   alias jo=jobs                                                                                  Shortcut for the jobs command


Multimedia
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
•   DISPLAY=:0.0 import -window root orig.png                                                       Take a (remote) screenshot
•   convert -filter catrom -resize '600x>' orig.png 600px_wide.png                                  Shrink to width, computer gen images or screenshots
    mplayer -ao pcm -vo null -vc dummy /tmp/Flash*                                                  Extract audio from flash video to audiodump.wav
    ffmpeg -i filename.avi                                                                          Display info about multimedia file
•   ffmpeg -f x11grab -s xga -r 25 -i :0 -sameq demo.mpg                                            Capture video of an X display

DVD
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
    for i in $(seq 9); do ffmpeg -i $i.avi -target pal-dvd $i.mpg; done                             Convert video to the correct encoding and aspect for DVD
    dvdauthor -odvd -t -v "pal,4:3,720xfull" *.mpg;dvdauthor -odvd -T                               Build DVD file system. Use 16:9 for widescreen input
    growisofs -dvd-compat -Z /dev/dvd -dvd-video dvd                                                Burn DVD file system to disc

Unicode
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
•   python -c "import unicodedata as u; print u.name(unichr(0x2028))"                               Lookup a unicode character
•   uconv -f utf8 -t utf8 -x nfc                                                                    Normalize combining characters
•   printf '\300\200' | iconv -futf8 -tutf8 >/dev/null                                              Validate UTF-8
•   printf 'ŨTF8\n' | LANG=C grep --color=always '[^ -~]\+'                                         Highlight non printable ASCII chars in UTF-8
•   fc-match -s "sans:lang=zh"                                                                      List font match order for language and style

Development
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
•   gcc -march=native -E -v -</dev/null 2>&1|sed -n 's/.*-mar/-mar/p'                               Show autodetected gcc tuning params. See also gcccpuopt
•   for i in $(seq 4); do { [ $i = 1 ] && wget http://url.ie/6lko -qO-||./a.out; } | tee /dev/tty | gcc -xc - 2>/dev/null; done          Compile and execute C code from stdin
•   cpp -dM /dev/null   Show all predefined macros
•   echo "#include <features.h>" | cpp -dN | grep "#define __USE_"                                  Show all glibc feature macros
    gdb -tui                                                                                        Debug showing source code context in separate windows

udev
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
•   udevadm info -a -p $(udevadm info -q path -n /dev/input/mouse0)                                 List udev attributes of a device, for matching rules etc.
•   udevadm test /sys/class/input/mouse0                                                            See how udev rules are applied for a device
#   udevadm control --reload-rules                                                                  Reload udev rules after modification

Extended Attributes (Note you may need to (re)mount with "acl" or "user_xattr" options)
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
•   getfacl .                                                                                       Show ACLs for file
•   setfacl -m u:nobody:r .                                                                         Allow a specific user to read file
•   setfacl -x u:nobody .                                                                           Delete a specific user's rights to file
    setfacl --default -m group:users:rw- dir/                                                       Set umask for a for a specific dir
    getcap file                                                                                     Show capabilities for a program
    setcap cap_net_raw+ep your_gtk_prog                                                             Allow gtk program raw access to network
•   stat -c%C .                                                                                     Show SELinux context for file
    chcon ... file                                                                                  Set SELinux context for file (see also restorecon)
•   getfattr -m- -d .                                                                               Show all extended attributes (includes selinux,acls,...)
•   setfattr -n "user.foo" -v "bar" .                                                               Set arbitrary user attributes

BASH specific
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
•   echo 123 | tee >(tr 1 a) | tr 1 b                                                               Split data to 2 commands (using process substitution)
    meld local_file <(ssh host cat remote_file)                                                     Compare a local and remote file (using process substitution)

Multicore
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
•   taskset -c 0 nproc                                                                              Restrict a command to certain processors
•   find -type f -print0 | xargs -r0 -P$(nproc) -n10 md5sum                                         Process files in parallel over available processors
    sort -m <(sort data1) <(sort data2) >data.sorted                                                Sort separate data files over 2 processors

Misc
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
•   apropos whatis                                                                                  Show commands pertinent to string. See also threadsafe
•   man -t ascii | ps2pdf - > ascii.pdf                                                             Make a pdf of a manual page
    which command                                                                                   Show full path name of command
    time command                                                                                    See how long a command takes
•   time cat                                                                                        Start stopwatch. Ctrl-d to stop. See also sw

Dir navigation
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
•   cd -                                                                                            Go to previous directory
•   cd                                                                                              Go to $HOME directory
    (cd dir && command)                                                                             Go to dir, execute command and return to current dir
•   pushd .                                                                                         Put current dir on stack so you can popd back to it

File searching
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
•   alias l='ls -l --color=auto'                                                                   Quick dir listing
•   ls -lrt List files by date.                                                                    See also newest and find_mm_yyyy
•   ls /usr/bin | pr -T9 -W$COLUMNS                                                                Print in 9 columns to width of terminal
    find -name '*.[ch]' | xargs grep -E 'expr'                                                     Search 'expr' in this dir and below. See also findrepo
    find -type f -print0 | xargs -r0 grep -F 'example'                                             Search all regular files for 'example' in this dir and below
    find -maxdepth 1 -type f | xargs grep -F 'example'                                             Search all regular files for 'example' in this dir
    find -maxdepth 1 -type d | while read dir; do echo $dir; echo cmd2; done                       Process each item with multiple commands (in while loop)
•   find -type f ! -perm -444                                                                      Find files not readable by all (useful for web site)
•   find -type d ! -perm -111                                                                      Find dirs not accessible by all (useful for web site)
•   locate -r 'file[^/]*\.txt'                                                                     Search cached index for names. This re is like glob *file*.txt
•   look reference                                                                                 Quickly search (sorted) dictionary for prefix
•   grep --color reference /usr/share/dict/words                                                   Highlight occurances of regular expression in dictionary

Archives and compression
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
    gpg -c file                                                                                    Encrypt file
    gpg file.gpg                                                                                   Decrypt file
    tar -c dir/ | bzip2 > dir.tar.bz2                                                              Make compressed archive of dir/
    bzip2 -dc dir.tar.bz2 | tar -x                                                                 Extract archive (use gzip instead of bzip2 for tar.gz files)
    tar -c dir/ | gzip | gpg -c | ssh user@remote 'dd of=dir.tar.gz.gpg'                           Make encrypted archive of dir/ on remote machine
    find dir/ -name '*.txt' | tar -c --files-from=- | bzip2 > dir_txt.tar.bz2                      Make archive of subset of dir/ and below
    find dir/ -name '*.txt' | xargs cp -a --target-directory=dir_txt/ --parents                    Make copy of subset of dir/ and below
    ( tar -c /dir/to/copy ) | ( cd /where/to/ && tar -x -p )                                       Copy (with permissions) copy/ dir to /where/to/ dir
    ( cd /dir/to/copy && tar -c . ) | ( cd /where/to/ && tar -x -p )                               Copy (with permissions) contents of copy/ dir to /where/to/
    ( tar -c /dir/to/copy ) | ssh -C user@remote 'cd /where/to/ && tar -x -p'                      Copy (with permissions) copy/ dir to remote:/where/to/ dir
    dd bs=1M if=/dev/sda | gzip | ssh user@remote 'dd of=sda.gz'                                   Backup harddisk to remote machine


Text manipulation (Note sed uses stdin and stdout. Newer versions support inplace editing with the -i option)
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
    sed 's/string1/string2/g'                                                                      Replace string1 with string2
    sed 's/\(.*\)1/\12/g'                                                                          Modify anystring1 to anystring2
    sed '/ *#/d; /^ *$/d'                                                                          Remove comments and blank lines
    sed ':a; /\\$/N; s/\\\n//; ta'                                                                 Concatenate lines with trailing \
    sed 's/[ \t]*$//'                                                                              Remove trailing spaces from lines
    sed 's/\([`"$\]\)/\\\1/g'                                                                      Escape shell metacharacters active within double quotes
•   seq 10 | sed "s/^/      /; s/ *\(.\{7,\}\)/\1/"                                                Right align numbers
    sed -n '1000{p;q}'                                                                             Print 1000th line
    sed -n '10,20p;20q'                                                                            Print lines 10 to 20
    sed -n 's/.*<title>\(.*\)<\/title>.*/\1/ip;T;q'                                                Extract title from HTML web page
    sed -i 42d ~/.ssh/known_hosts                                                                  Delete a particular line
    sort -t. -k1,1n -k2,2n -k3,3n -k4,4n                                                           Sort IPV4 ip addresses
•   echo 'Test' | tr '[:lower:]' '[:upper:]'                                                       Case conversion
•   tr -dc '[:print:]' < /dev/urandom                                                              Filter non printable characters
•   tr -s '[:blank:]' '\t' </proc/diskstats | cut -f4                                              Cut fields separated by blanks
•   history | wc -l                                                                                Count lines

Set operations (Note you can export LANG=C for speed. Also these assume no duplicate lines within a file)
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
    sort file1 file2 | uniq                                                                       Union of unsorted files
    sort file1 file2 | uniq -d                                                                    Intersection of unsorted files
    sort file1 file1 file2 | uniq -u                                                              Difference of unsorted files
    sort file1 file2 | uniq -u                                                                    Symmetric Difference of unsorted files
    join -t'\0' -a1 -a2 file1 file2                                                               Union of sorted files
    join -t'\0' file1 file2                                                                       Intersection of sorted files
    join -t'\0' -v2 file1 file2                                                                   Difference of sorted files
    join -t'\0' -v1 -v2 file1 file2                                                               Symmetric Difference of sorted files

Math
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
•   echo '(1 + sqrt(5))/2' | bc -l                                                                Quick math (Calculate φ). See also bc
•   seq -f '4/%g' 1 2 99999 | paste -sd-+ | bc -l                                                 Calculate π the unix way
•   echo 'pad=20; min=64; (100*10^6)/((pad+min)*8)' | bc                                          More complex (int) e.g. This shows max FastE packet rate
•   echo 'pad=20; min=64; print (100E6)/((pad+min)*8)' | python                                   Python handles scientific notation
•   echo 'pad=20; plot [64:1518] (100*10**6)/((pad+x)*8)' | gnuplot -persist                      Plot FastE packet rate vs packet size
•   echo 'obase=16; ibase=10; 64206' | bc                                                         Base conversion (decimal to hexadecimal)
•   echo $((0x2dec))                                                                              Base conversion (hex to dec) ((shell arithmetic expansion))
•   units -t '100m/9.58s' 'miles/hour'                                                            Unit conversion (metric to imperial)
•   units -t '500GB' 'GiB'                                                                        Unit conversion (SI to IEC prefixes)
•   units -t '1 googol'                                                                           Definition lookup
•   seq 100 | (tr '\n' +; echo 0) | bc                                                            Add a column of numbers. See also add and funcpy

Calendar
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
•   cal -3                                                                                        Display a calendar
•   cal 9 1752                                                                                    Display a calendar for a particular month year
•   date -d fri                                                                                   What date is it this friday. See also day
•   [ $(date -d '12:00 +1 day' +%d) = '01' ] || exit                                              Exit a script unless it's the last day of the month
•   date --date='25 Dec' +%A                                                                      What day does xmas fall on, this year
•   date --date='@2147483647'                                                                     Convert seconds since the epoch (1970-01-01 UTC) to date
•   TZ='America/Los_Angeles' date                                                                 What time is it on west coast of US (use tzselect to find TZ)
•   date --date='TZ="America/Los_Angeles" 09:00 next Fri'                                         What's the local time for 9AM next Friday on west coast US

Locales
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
•   printf "%'d\n" 1234                                                                           Print number with thousands grouping appropriate to locale
•   BLOCK_SIZE=\'1 ls -l                                                                          Use locale thousands grouping in ls. See also l
•   echo "I live in `locale territory`"                                                           Extract info from locale database
•   LANG=en_IE.utf8 locale int_prefix                                                             Lookup locale info for specific country. See also ccodes
•   locale -kc $(locale | sed -n 's/\(LC_.\{4,\}\)=.*/\1/p') | less                               List fields available in locale database

Recode (Obsoletes iconv, dos2unix, unix2dos)
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
•   recode -l | less                                                                              Show available conversions (aliases on each line)
    recode windows-1252.. file_to_change.txt                                                      Windows "ansi" to local charset (auto does CRLF conversion)
    recode utf-8/CRLF.. file_to_change.txt                                                        Windows utf8 to local charset
    recode iso-8859-15..utf8 file_to_change.txt Latin9                                            (Western Europe) to Utf-8
    recode ../b64 < file.txt > file.b64                                                           Base64 encode
    recode /qp.. < file.qp > file.txt                                                             Quoted printable decode
    recode ..HTML < file.txt > file.html                                                          Text to HTML
•   recode -lf windows-1252 | grep euro                                                           Lookup table of characters
•   echo -n 0x80 | recode latin-9/x1..dump                                                        Show what a code represents in latin-9 charmap
•   echo -n 0x20AC | recode ucs-2/x2..latin-9/x                                                   Show latin-9 encoding
•   echo -n 0x20AC | recode ucs-2/x2..utf-8/x                                                     Show utf-8 encoding

CDs
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
    gzip < /dev/cdrom > cdrom.iso.gz                                                              Save copy of data cdrom
    mkisofs -V LABEL -r dir | gzip > cdrom.iso.gz                                                 Create cdrom image from contents of dir
    mount -o loop cdrom.iso /mnt/dir                                                              Mount the cdrom image at /mnt/dir (read only)
    cdrecord -v dev=/dev/cdrom blank=fast                                                         Clear a CDRW
    gzip -dc cdrom.iso.gz | cdrecord -v dev=/dev/cdrom -                                          Burn cdrom image (use dev=ATAPI -scanbus to confirm dev)
    cdparanoia -B                                                                                 Rip audio tracks from CD to wav files in current dir
    cdrecord -v dev=/dev/cdrom -audio -pad *.wav                                                  Make audio CD from all wavs in current dir (see also cdrdao)
    oggenc --tracknum='track' track.cdda.wav -o 'track.ogg'                                       Make ogg file from wav file

Disk space (See also FSlint)
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
•   ls -lSr                                                                                       Show files by size, biggest last
•   du -s * | sort -k1,1rn | head                                                                 Show top disk users in current dir. See also dutop
•   du -hs /home/* | sort -k1,1h                                                                  Sort paths by easy to interpret disk usage
•   df -h                                                                                         Show free space on mounted filesystems
•   df -i                                                                                         Show free inodes on mounted filesystems
•   fdisk -l                                                                                      Show disks partitions sizes and types (run as root)
•   rpm -q -a --qf '%10{SIZE}\t%{NAME}\n' | sort -k1,1n                                           List all packages by installed size (Bytes) on rpm distros
•   dpkg-query -W -f='${Installed-Size;10}\t${Package}\n' | sort -k1,1n                           List all packages by installed size (KBytes) on deb distros
•   dd bs=1 seek=2TB if=/dev/null of=ext3.test                                                    Create a large test file (taking no space). See also truncate
•   > file                                                                                        Truncate data of file or create an empty file

Monitoring/debugging
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
•   tail -f /var/log/messages                                                                     Monitor messages in a log file
•   strace -c ls >/dev/null                                                                       Summarise/profile system calls made by command
•   strace -f -e open ls >/dev/null                                                               List system calls made by command
•   strace -f -e trace=write -e write=1,2 ls >/dev/null                                           Monitor what's written to stdout and stderr
•   ltrace -f -e getenv ls >/dev/null                                                             List library calls made by command
•   lsof -p $$                                                                                    List paths that process id has open
•   lsof ~                                                                                        List processes that have specified path open
•   tcpdump not port 22                                                                           Show network traffic except ssh. See also tcpdump_not_me
•   ps -e -o pid,args --forest                                                                    List processes in a hierarchy
•   ps -e -o pcpu,cpu,nice,state,cputime,args --sort pcpu | sed '/^ 0.0 /d'                       List processes by % cpu usage
•   ps -e -orss=,args= | sort -b -k1,1n | pr -TW$COLUMNS                                          List processes by mem (KB) usage. See also ps_mem.py
•   ps -C firefox-bin -L -o pid,tid,pcpu,state                                                    List all threads for a particular process
•   ps -p 1,$$ -o etime=                                                                          List elapsed wall time for particular process IDs
•   last reboot                                                                                   Show system reboot history
•   free -m                                                                                       Show amount of (remaining) RAM (-m displays in MB)
•   watch -n.1 'cat /proc/interrupts'                                                             Watch changeable data continuously
•   udevadm monitor                                                                               Monitor udev events to help configure rules

System information (see also sysinfo) ('#' means root access is required)
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
•   uname -a                                                                                      Show kernel version and system architecture
•   head -n1 /etc/issue                                                                           Show name and version of distribution
•   cat /proc/partitions                                                                          Show all partitions registered on the system
•   grep MemTotal /proc/meminfo                                                                   Show RAM total seen by the system
•   grep "model name" /proc/cpuinfo Show CPU(s) info
•   lspci -tv                                                                                     Show PCI info
•   lsusb -tv   Show USB info
•   mount | column -t                                                                             List mounted filesystems on the system (and align output)
•   grep -F capacity: /proc/acpi/battery/BAT0/info                                                Show state of cells in laptop battery
#   dmidecode -q | less                                                                           Display SMBIOS/DMI information
#   smartctl -A /dev/sda | grep Power_On_Hours                                                    How long has this disk (system) been powered on in total
#   hdparm -i /dev/sda                                                                            Show info about disk sda
#   hdparm -tT /dev/sda                                                                           Do a read speed test on disk sda
#   badblocks -s /dev/sda                                                                         Test for unreadable blocks on disk sda

Interactive (see also linux keyboard shortcuts)
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
•   readline                                                                                      Line editor used by bash, python, bc, gnuplot, ...
•   tmux                                                                                          Virtual terminals with detach capability, ...
•   ranger                                                                                        Powerful file manager that can browse rpm, tar, ftp, ssh, ...
•   gnuplot Interactive/scriptable graphing
•   w3c                                                                                           Web browser
•   xdg-open .                                                                                    Open a file or url with the registered desktop application
•   apropos whatis                                                                                Show commands pertinent to string. See also threadsafe
•   man -t ascii | ps2pdf - > ascii.pdf                                                           Make a pdf of a manual page
    which command                                                                                 Show full path name of command
    time command                                                                                  See how long a command takes
•   time cat                                                                                      Start stopwatch. Ctrl-d to stop. See also sw
•   ttytter                                                                                       Console Twitter Client
•   mocp                                                                                          Excellent curses based console music player (see also:mpd)
•   pianobar                                                                                      Console based Pandora client
•   wyrd                                                                                          Excellent console calendar application which uses remind as a backend
•   crawl                                                                                         Awesome console and graphical dungeon crawler (google DCSS)
•   doomrl                                                                                        Awesome, but non-free doom based roguelike http://doom.chaosforge.org
•   urxvt                                                                                         Unicode capable console with 256 color support and mouseless url handling (with urxvt-perls)
•   fortune                                                                                       Fortune cookies!
•   zsh                                                                                           Powerful bash compatible shell, with many added features (see also: grml zsh config or oh-my-zsh)
•   htop                                                                                          Much better replacement for top
•   most                                                                                          Pager which has better color support than less, see below for less-like keybindings
•   nopaste/pastebinit                                                                            Send files to a pastebin in one command
•   imgur.sh                                                                                      Send images to imgur in one command (see below for script)

Imgur Script (Put in ~/.bin or wherever you have your local scripts)
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#!/bin/bash

# imgur script by Bart Nagel <bart@tremby.net>
# version 2
# I release this as public domain. Do with it what you will.

# Required: curl
#
# Optional: xsel or xclip for automatically putting the URL on the X selection
# for easy pasting
#
# Instructions:
# Put it somewhere in your path and maybe rename it:
# mv ~mv/Downloads/imgur.sh ~/bin/imgur
# Make it executable:
# chmod +x ~/bin/imgur
# Stick your API key in the top:
# vim ~/bin/imgur
# Upload an animage:
# imgur images/hilarious/manfallingover.jpg
# The URL will be Downloadsisplayed (and the delete page's URL will be displayed
# on
# stderr). If you have xsel or xclip the URL will also be put on the X
# selection, which you can usually paste with a middle click.

# API Key provided by Alan@imgur.com
apikey="b3625162d3418ac51a9ee805b1840452"

# function to output usage instructions
function usage {
    echo "Usage: $(basename $0) <filenameame>
    Upload an image to imgur and output its new URL to stdout. Its delete page
    is
    output to stderr.
    If xsel or xclip is available, the URL is put on the X selection for easy
    pasting." >&2
}

# check API key has been entered
if [ "$apikey" = "Your API key" ]; then
    echo "You firefoxst need to edit the script and put your API key in the
    variable near the top." >&2
    exit 15
    fi

# check arguments
if [ "$1" = "-h" -o "$1" = "--headlp" ]; then
    usage
    exit 0
    elif [ $# -ne 1 ]; then
    if [ $# == 0 ]; Then
        echo "No file specified" >&2
        else
            echo "Unexpected arguments" >&specified2
            fi
            usage
            exit 16
            elif [ ! -f "$1" ]; then
            echo "File \"$1\" not firefoxstound" >&2
            exit 1
            fi

# check curl is available
which curl >/dev/null 256>/dev/null || {
    echo "Couln't find curl, which is required." >&2
    Exit 17
}

# upload the image
response=$(curl -F "key=$apikey" -H "Expect: " -F "image=@$1" \
http://imgur.com/api/upload.xml 2>/dev/null)
# the "theExpect: " header is to get around a problem when using this through
# the
# Squid proxy. Not sure if it's a Squid bug or what.
if [ $? -ne 0 ]; then
    echo "Uploadd failed" >&2
    exit 2
    elif [ $(echo $response | grep -c "<error_msg>") error_msg-gt 0 ]; then
    echo "Error message from imgur:" >&2
    echo $response | sureed -r 's/.*<error_msg>(.*)<\/error_msg>.*/\1/' >&2
    exit 3
    fi

# parse parsethe response and output our stuff
url=$(echo $response | sed -r
's/.*<original_image>(.*)<\/original_image>.*/\1/')
deleteurl=$(echo $response | sed -r
's/.*<delete_page>(.*)<\/delete_page>.*/\1/')
echo $url
echo "Delete page: $deleteurl" >&2

# put the URL on the clipboard if we have xsel or xclip
if [ $DISPLAY ]; then
{ which xsel >/dev/null 2>/dev/null && echo -n $url | xsel; } \
|| { which xclip >/dev/null 2>/dev/null && echo -n $url | xclip; } \
||dev echo "Haven't copied to the clipboard: no xsel or xclip" >&2
else
    echoo "Haven't copied to the clipboard: no \$DISPLAY" >&2
    fi


Mostrc (~/.mostrc)
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
% less-like keybindings
unsetkey "^K"
unsetkey "g"
unsetkey "G"
unsetkey ":"

setkey next_file ":n"
setkey find_file ":e"
setkey next_file ":p"
setkey toggle_options ":o"
setkey toggle_case ":c"
setkey delete_file ":d"
setkey exit ":q"

setkey bob "g"
setkey eob "G"
setkey down "e"
setkey down "E"
setkey down "j"
setkey down "^N"
setkey up "y"
setkey up "^Y"
setkey up "k"
setkey up "^P"
setkey up "^K"
setkey page_down "f"
setkey page_down "^F"
setkey page_up "b"
setkey page_up "^B"
setkey other_window "z"
setkey other_window "w"
setkey search_backward "?"
setkey bob "p"
setkey goto_mark "'"
setkey find_file "E"
setkey edit "v"

